{"version":3,"sources":["App.js","actions/contador.js","reportWebVitals.js","reducers/contador.js","store/index.js","index.js"],"names":["connect","state","contador","contadorReducer","dispatch","incrementar","type","decrementar","_ref","react_default","a","createElement","id","className","onClick","index_es","icon","faPlus","faMinus","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","arguments","length","undefined","Object","objectSpread","reducers","combineReducers","store","createStore","ReactDOM","createRoot","document","getElementById","render","StrictMode","es","src_App"],"mappings":"iQAqBA,IASeA,cATS,SAAAC,GAAK,MAAK,CAChCC,SAAUD,EAAME,gBAAgBD,WAGP,SAACE,GAAD,MAAe,CACxCC,YAAa,kBAAMD,ECvBqB,CACtCE,KAJuB,2BD2BzBC,YAAa,kBAAMH,ECpBqB,CACtCE,KAPuB,6BD6BZN,CAvBf,SAAAQ,GAAmD,IAArCN,EAAqCM,EAArCN,SAAUG,EAA2BG,EAA3BH,YAAaE,EAAcC,EAAdD,YACnC,OACEE,EAAAC,EAAAC,cAAA,OAAKC,GAAG,aACNH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAf,aACaX,GAEbO,EAAAC,EAAAC,cAAA,OAAKC,GAAG,mBACNH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,iBAAiBE,QAAST,GAAaI,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAiBC,KAAIC,EAAA,SAAvE,gBACAR,EAAAC,EAAAC,cAAA,UAAQC,GAAG,iBAAiBE,QAASP,GAAaE,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAiBC,KAAIE,EAAA,UAAvE,oBEHOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAhB,GAAiD,IAA9CkB,EAA8ClB,EAA9CkB,OAAQC,EAAsCnB,EAAtCmB,OAAQC,EAA8BpB,EAA9BoB,OAAQC,EAAsBrB,EAAtBqB,OAAQC,EAActB,EAAdsB,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,oBCLRW,EAAe,CACjB7B,SAAU,GAoBCC,EAjBS,WAAmC,IAAjCF,EAAiC+B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBD,EAC9B,QADuDC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACzC5B,MACV,IFRmB,wBESf,OAAA6B,OAAAC,EAAA,EAAAD,CAAA,GACOlC,EADP,CAEIC,SAAUD,EAAMC,SAAW,IAEnC,IFZmB,wBEaf,OAAOiC,OAAAC,EAAA,EAAAD,CAAA,GACAlC,EADP,CAEIC,SAAUD,EAAMC,SAAW,IAEnC,QACI,OAAOD,IChBboC,EAAWC,YAAgB,CAAEnC,oBAGpBoC,EAFDC,YAAYH,GCIbI,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHpC,EAAAC,EAAAC,cAACF,EAAAC,EAAMoC,WAAP,KACErC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAUR,MAAOA,GACf9B,EAAAC,EAAAC,cAACqC,EAAD,SAQN7B","file":"static/js/main.949a487c.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {incrementarContador, decrementarContador} from './actions/contador.js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { solid } from '@fortawesome/fontawesome-svg-core/import.macro' // <-- import styles to be used\n\nfunction App({contador, incrementar, decrementar}) {\n  return (\n    <div id=\"container\">\n      <div className=\"App\">\n        Contador: {contador}\n      </div>\n      <div id=\"buttonContainer\">\n        <button id=\"btnIncrementar\" onClick={incrementar}><FontAwesomeIcon icon={solid('plus')}/> Incrementar</button>\n        <button id=\"btnDecrementar\" onClick={decrementar}><FontAwesomeIcon icon={solid('minus')}/> Decrementar</button>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contador: state.contadorReducer.contador,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  incrementar: () => dispatch(incrementarContador()),\n  decrementar: () => dispatch(decrementarContador()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n//connect(estadoQueDesejaUsar, dispatchersQueDesejaUsar)(ComponenteQueDesejaConectar).\n","export const INCREMENTAR = 'CONTADOR::INCREMENTAR';\r\nexport const DECREMENTAR = 'CONTADOR::DECREMENTAR';\r\n\r\nexport const incrementarContador = () => ({\r\n    type: INCREMENTAR\r\n});\r\n\r\nexport const decrementarContador = () => ({\r\n    type: DECREMENTAR\r\n});","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { INCREMENTAR, DECREMENTAR } from '../actions/contador'\r\n\r\nconst initialState = {\r\n    contador: 0\r\n}\r\n\r\nconst contadorReducer = ( state = initialState, action) => {\r\n    switch(action.type){\r\n        case INCREMENTAR:\r\n            return{\r\n                ...state,\r\n                contador: state.contador + 1,\r\n            };\r\n        case DECREMENTAR:\r\n            return {\r\n                ...state,\r\n                contador: state.contador - 1,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default contadorReducer;","import { createStore, combineReducers} from \"redux\";\r\nimport contadorReducer from \"../reducers/contador\";\r\n\r\nconst reducers = combineReducers({ contadorReducer }); //Combina os reducers\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}